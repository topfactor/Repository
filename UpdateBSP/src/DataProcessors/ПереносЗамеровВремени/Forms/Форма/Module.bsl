
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаНачала = Дата(3000,1,1);
	ДатаОкончания = Дата(1,1,1);
	
	ДатаНачалаТехнологические = Дата(3000,1,1);
	ДатаОкончанияТехнологические = Дата(1,1,1);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ISNULL(МИНИМУМ(ДатаЗаписи), ДАТАВРЕМЯ(3000,1,1)) КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени2
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаНачала = Выборка.ДатаЗаписи;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ISNULL(МАКСИМУМ(ДатаЗаписи), ДАТАВРЕМЯ(1,1,1)) КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени2
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаОкончания = Выборка.ДатаЗаписи;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ISNULL(МИНИМУМ(ДатаЗаписи), ДАТАВРЕМЯ(3000,1,1)) КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени3
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаНачала3 = Выборка.ДатаЗаписи;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ISNULL(МАКСИМУМ(ДатаЗаписи), ДАТАВРЕМЯ(1,1,1)) КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени3
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаОкончания3 = Выборка.ДатаЗаписи;
	КонецЕсли;

	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ISNULL(МИНИМУМ(ДатаЗаписи), ДАТАВРЕМЯ(3000,1,1)) КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремениТехнологические
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаНачалаТехнологические = Выборка.ДатаЗаписи;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ISNULL(МАКСИМУМ(ДатаЗаписи), ДАТАВРЕМЯ(1,1,1)) КАК ДатаЗаписи
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремениТехнологические
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаОкончанияТехнологические = Выборка.ДатаЗаписи;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗамеров
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени2
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Объект.КоличествоОбнаружено = Объект.КоличествоОбнаружено + Выборка.КоличествоЗамеров;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗамеров
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени3
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Объект.КоличествоОбнаружено = Объект.КоличествоОбнаружено + Выборка.КоличествоЗамеров;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗамеров
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремениТехнологические
	|";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Объект.КоличествоОбнаружено = Объект.КоличествоОбнаружено + Выборка.КоличествоЗамеров;
	КонецЕсли;
	
	Объект.ДатаНачалаОбнаружено = Мин(ДатаНачала, ДатаНачала3, ДатаНачалаТехнологические);//?(ДатаНачала < ДатаНачалаТехнологические, ДатаНачала, ДатаНачалаТехнологические);
	Объект.ДатаНачалаПеренос = Объект.ДатаНачалаОбнаружено;
	
	Объект.ДатаОкончанияОбнаружено = Макс(ДатаОкончания, ДатаОкончания3, ДатаОкончанияТехнологические);//?(ДатаОкончания > ДатаОкончанияТехнологические, ДатаОкончания, ДатаОкончанияТехнологические);
	Объект.ДатаОкончанияПеренос = Объект.ДатаОкончанияОбнаружено;
	
	Объект.КоличествоОсталосьПеренести = Объект.КоличествоОбнаружено;
	
	Если Объект.КоличествоОбнаружено = 0 Тогда
		Объект.ДатаНачалаОбнаружено = Дата(1,1,1);
		Объект.ДатаНачалаПеренос = Дата(1,1,1);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаПереносПриИзменении(Элемент)
	Объект.КоличествоОсталосьПеренести = ПолучитьКоличествоКПереносу(Объект.ДатаНачалаПеренос, Объект.ДатаОкончанияПеренос);	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПереносПриИзменении(Элемент)
	Объект.КоличествоОсталосьПеренести = ПолучитьКоличествоКПереносу(Объект.ДатаНачалаПеренос, Объект.ДатаОкончанияПеренос);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенести(Команда)
	
	Если Объект.КоличествоОбнаружено <> 0 Тогда
		ПодключитьОбработчикОжидания("ПеренестиПодключаемый", 0.1, Истина);
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Нет данных для переноса.'");
	
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПеренестиПодключаемый()
	
	Записано = ПеренестиНаСервере(Объект.ДатаНачалаПеренос, Объект.ДатаОкончанияПеренос);
	
	Если Записано > 0 Тогда
		Объект.КоличествоОсталосьПеренести = Объект.КоличествоОсталосьПеренести - Записано;
		ПодключитьОбработчикОжидания("ПеренестиПодключаемый", 0.1, Истина);
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Перенос данных завершен.'");
	
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоличествоКПереносу(ДатаНачала, ДатаОкончания)
	
	КоличествоОсталосьПеренести = 0;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗамеров
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени2
	|ГДЕ
	|	ДатаЗаписи МЕЖДУ &ДатаНачала И &ДатаОкончания
	|";
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КоличествоОсталосьПеренести = КоличествоОсталосьПеренести + Выборка.КоличествоЗамеров;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗамеров
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремениТехнологические
	|ГДЕ
	|	ДатаЗаписи МЕЖДУ &ДатаНачала И &ДатаОкончания
	|";
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КоличествоОсталосьПеренести = КоличествоОсталосьПеренести + Выборка.КоличествоЗамеров;
	КонецЕсли;
	
	Возврат КоличествоОсталосьПеренести;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПеренестиНаСервере(ДатаНачала, ДатаОкончания)
	
	Записано = 0;
	
	НачатьТранзакцию();	
	
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УдалитьЗамерыВремени2");
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УдалитьЗамерыВремениТехнологические");
		Блокировка.Заблокировать();
				
		Результат = ВыбратьЗаписиДляПереноса(ДатаНачала, ДатаОкончания);
		Записано = Записано + ПеренестиЗаписи(Результат);
		
		Результат = ВыбратьЗаписиДляПереноса(ДатаНачала, ДатаОкончания, "УдалитьЗамерыВремени3");
		Записано = Записано + ПеренестиЗаписи(Результат, "УдалитьЗамерыВремени3");
		
		Результат = ВыбратьЗаписиТехнологическиеДляПереноса(ДатаНачала, ДатаОкончания);
		Записано = Записано + ПеренестиТехнологическиеЗаписи(Результат);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Записано;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыбратьЗаписиДляПереноса(ДатаНачала, ДатаОкончания, ИмяРегистра = "")
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	КлючеваяОперация,
	|	ДатаНачалаЗамера,
	|	НомерСеанса,
	|	ВремяВыполнения,
	|	Комментарий,
	|	ДатаЗаписи,
	|	ДатаОкончания,
	|	Пользователь,
	|	ДатаЗаписиЛокальная
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремени2
	|ГДЕ
	|	ДатаЗаписи <= &ДатаОкончания
	|УПОРЯДОЧИТЬ ПО
	|	ДатаЗаписи УБЫВ
	|";
	
	Если ИмяРегистра = "УдалитьЗамерыВремени3" Тогда
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1000
		|	КлючеваяОперация,
		|	ДатаНачалаЗамера,
		|	НомерСеанса,
		|	ДатаЗаписиНачалоЧаса,
		|	ВремяВыполнения,
		|	ВесЗамера,
		|	Комментарий,
		|	ДатаЗаписи,
		|	ДатаОкончания,
		|	Пользователь,
		|	ДатаЗаписиЛокальная
		|ИЗ
		|	РегистрСведений.УдалитьЗамерыВремени3
		|ГДЕ
		|	ДатаЗаписи <= &ДатаОкончания
		|УПОРЯДОЧИТЬ ПО
		|	ДатаЗаписи УБЫВ
		|";      
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыбратьЗаписиТехнологическиеДляПереноса(ДатаНачала, ДатаОкончания)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	КлючеваяОперация,
	|	ДатаНачалаЗамера,
	|	НомерСеанса,
	|	ВремяВыполнения,
	|	Комментарий,
	|	ДатаЗаписи,
	|	ДатаОкончания,
	|	Пользователь,
	|	ДатаЗаписиЛокальная
	|ИЗ
	|	РегистрСведений.УдалитьЗамерыВремениТехнологические
	|ГДЕ
	|	ДатаЗаписи <= &ДатаОкончания
	|УПОРЯДОЧИТЬ ПО
	|	ДатаЗаписи УБЫВ
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПеренестиЗаписи(Результат, ИмяРегистра = "УдалитьЗамерыВремени2")
	
	Записано = 0;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ЗамерыВремени.СоздатьМенеджерЗаписи();
		НаборЗаписейУдалить = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
		
		МенеджерЗаписи.КлючеваяОперация = Выборка.КлючеваяОперация;
		МенеджерЗаписи.НомерСеанса = Выборка.НомерСеанса;
		МенеджерЗаписи.ВремяВыполнения = Выборка.ВремяВыполнения;
		МенеджерЗаписи.ДатаЗаписи = Выборка.ДатаЗаписи;
		МенеджерЗаписи.Пользователь = Выборка.Пользователь;
		МенеджерЗаписи.ДатаЗаписиЛокальная = Выборка.ДатаЗаписиЛокальная;
		Если ИмяРегистра = "УдалитьЗамерыВремени2" Тогда
			МенеджерЗаписи.ДатаНачалаЗамера = (Выборка.ДатаНачалаЗамера - Дата(1,1,1)) * 1000;
			МенеджерЗаписи.ДатаОкончания = (Выборка.ДатаОкончания - Дата(1,1,1)) * 1000;
			МенеджерЗаписи.ДатаЗаписиНачалоЧаса = НачалоЧаса(Выборка.ДатаЗаписи);
			МенеджерЗаписи.ВесЗамера = 1;
			МенеджерЗаписи.Комментарий = ПолучитьКомментарийJSON(Выборка.Комментарий);
		ИначеЕсли ИмяРегистра = "УдалитьЗамерыВремени3" Тогда
			МенеджерЗаписи.ДатаНачалаЗамера = Выборка.ДатаНачалаЗамера;
			МенеджерЗаписи.ДатаОкончания = Выборка.ДатаОкончания;
			МенеджерЗаписи.ДатаЗаписиНачалоЧаса = Выборка.ДатаЗаписиНачалоЧаса;
			МенеджерЗаписи.ВесЗамера = Выборка.ВесЗамера;
			МенеджерЗаписи.Комментарий = Выборка.Комментарий;
		КонецЕсли;
		
		МенеджерЗаписи.Записать(Истина);
		
		НаборЗаписейУдалить.Отбор.КлючеваяОперация.Установить(Выборка.КлючеваяОперация);
		НаборЗаписейУдалить.Отбор.ДатаНачалаЗамера.Установить(Выборка.ДатаНачалаЗамера);
		НаборЗаписейУдалить.Отбор.НомерСеанса.Установить(Выборка.НомерСеанса);
		Если ИмяРегистра = "УдалитьЗамерыВремени3" Тогда
			НаборЗаписейУдалить.Отбор.ДатаЗаписиНачалоЧаса.Установить(Выборка.ДатаЗаписиНачалоЧаса);
		КонецЕсли;
		НаборЗаписейУдалить.Записать(Истина);
		
		Записано = Записано + 1;
		
	КонецЦикла;
	
	Возврат Записано;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПеренестиТехнологическиеЗаписи(Результат)
	
	Записано = 0;
	
	МенеджерЗаписи = РегистрыСведений.ЗамерыВремениТехнологические.СоздатьМенеджерЗаписи();
	НаборЗаписейУдалить = РегистрыСведений.УдалитьЗамерыВремениТехнологические.СоздатьНаборЗаписей();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		МенеджерЗаписи.КлючеваяОперация = Выборка.КлючеваяОперация;
		МенеджерЗаписи.ДатаНачалаЗамера = (Выборка.ДатаНачалаЗамера - Дата(1,1,1)) * 1000;
		МенеджерЗаписи.НомерСеанса = Выборка.НомерСеанса;
		МенеджерЗаписи.ДатаЗаписиНачалоЧаса = НачалоЧаса(Выборка.ДатаЗаписи);
		МенеджерЗаписи.ВремяВыполнения = Выборка.ВремяВыполнения;
		МенеджерЗаписи.ВесЗамера = 1;
		МенеджерЗаписи.Комментарий = ПолучитьКомментарийJSON(Выборка.Комментарий);
		МенеджерЗаписи.ДатаЗаписи = Выборка.ДатаЗаписи;
		МенеджерЗаписи.ДатаОкончания = (Выборка.ДатаОкончания - Дата(1,1,1)) * 1000;
		МенеджерЗаписи.Пользователь = Выборка.Пользователь;
		МенеджерЗаписи.ДатаЗаписиЛокальная = Выборка.ДатаЗаписиЛокальная;
		
		МенеджерЗаписи.Записать(Истина);
		
		НаборЗаписейУдалить.Отбор.КлючеваяОперация.Установить(Выборка.КлючеваяОперация);
		НаборЗаписейУдалить.Отбор.ДатаНачалаЗамера.Установить(Выборка.ДатаНачалаЗамера);
		НаборЗаписейУдалить.Отбор.НомерСеанса.Установить(Выборка.НомерСеанса);
		НаборЗаписейУдалить.Записать(Истина);
		
		Записано = Записано + 1;
		
	КонецЦикла;
	
	Возврат Записано;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКомментарийJSON(Комментарий)
	
	КомментарийМассив = СтрРазделить(Комментарий, ";", Ложь);
	КомментарийСоответствие = Новый Соответствие;
	КомментарийСоответствие.Вставить("Платф", Неопределено);
	КомментарийСоответствие.Вставить("Конф", Неопределено);
	КомментарийСоответствие.Вставить("КонфВер", Неопределено);
	КомментарийСоответствие.Вставить("Разд", Неопределено);
	
	Если КомментарийМассив.Количество() = 3 Тогда
		КомментарийСоответствие["Платф"] = КомментарийМассив[0];
		КомментарийСоответствие["Конф"] =  КомментарийМассив[1];
		КомментарийСоответствие["Разд"] = КомментарийМассив[2];
	Иначе
		КомментарийСоответствие["ДопИнф"] = Комментарий;
	КонецЕсли;
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет));
	ЗаписатьJSON(ЗаписьJSON, КомментарийСоответствие);
		
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

#КонецОбласти