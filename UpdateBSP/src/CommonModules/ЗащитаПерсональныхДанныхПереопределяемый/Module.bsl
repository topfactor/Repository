#Область ПрограммныйИнтерфейс

// Обеспечивает сбор сведений о хранении данных, относящихся к персональным.
//
// Параметры:
//		ТаблицаСведений - ТаблицаЗначений - таблица с полями:
//			* Объект 			- Строка - полное имя объекта метаданных;
//			* ПоляРегистрации	- Строка - имена полей регистрации, отдельные поля регистрации отделяются запятой,
//										альтернативные - символом "|";
//			* ПоляДоступа		- Строка - имена полей доступа через запятую.
//			* ОбластьДанных		- Строка - идентификатор области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	// _Демо начало примера
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Справочник._ДемоФизическиеЛица";
	НовыеСведения.ПоляРегистрации	= "Ссылка";
	НовыеСведения.ПоляДоступа		= "Наименование,ДатаРождения";
	НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Справочник._ДемоФизическиеЛица";
	НовыеСведения.ПоляРегистрации	= "Ссылка";
	НовыеСведения.ПоляДоступа		= "СерияДокумента,НомерДокумента,КемВыданДокумент,ДатаВыдачиДокумента";
	НовыеСведения.ОбластьДанных		= "ПаспортныеДанные";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ._ДемоНачислениеЗарплаты";
	НовыеСведения.ПоляРегистрации	= "Зарплата.ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Зарплата.Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "РегистрРасчета._ДемоОсновныеНачисления";
	НовыеСведения.ПоляРегистрации	= "ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "Результат";
	НовыеСведения.ОбластьДанных		= "Доходы";
	// _Демо конец примера
	
КонецПроцедуры

// Обеспечивает составление коллекции областей персональных данных.
//
// Параметры:
//		ОбластиПерсональныхДанных - ТаблицаЗначений - таблица с полями:
//			* Имя			- Строка - идентификатор области данных.
//			* Представление	- Строка - пользовательское представление области данных.
//			* Родитель		- Строка - идентификатор родительской области данных.
//
Процедура ЗаполнитьОбластиПерсональныхДанных(ОбластиПерсональныхДанных) Экспорт
	
	// _Демо начало примера
	// Заполнение представлений для используемых областей.
	НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
	НоваяОбласть.Имя = "ЛичныеДанные";
	НоваяОбласть.Представление = НСтр("ru = 'Личные данные'");
	
	НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
	НоваяОбласть.Имя = "ПаспортныеДанные";
	НоваяОбласть.Представление = НСтр("ru = 'Паспортные данные'");
	НоваяОбласть.Родитель = "ЛичныеДанные";
	// _Демо конец примера
	
КонецПроцедуры

// Вызывается при заполнении формы "Согласие на обработку персональных данных" данными, 
// переданных в качестве параметров, субъектов.
//
// Параметры:
//		СубъектыПерсональныхДанных 	- ДанныеФормыКоллекция - содержит сведения о субъектах.
//		ДатаАктуальности			- Дата - дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеСубъектовПерсональныхДанных(СубъектыПерсональныхДанных, ДатаАктуальности) Экспорт
	
	// _Демо начало примера
	// Пример заполнения данных для субъектов типов: Физические лица, _ДемоКонтактныеЛицаПартнеров, _ДемоКонтрагенты,
	// _ДемоПартнеры.
	Для Каждого СтрокаСубъект Из СубъектыПерсональныхДанных Цикл
		Если ТипЗнч(СтрокаСубъект.Субъект) = Тип("СправочникСсылка._ДемоФизическиеЛица") Тогда
			ИменаРеквизитов = "Наименование, СерияДокумента, НомерДокумента, КемВыданДокумент, ДатаВыдачиДокумента";
			ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаСубъект.Субъект, ИменаРеквизитов);
			// Заполнение реквизитов.
			СтрокаСубъект.ФИО = ЗначенияРеквизитов.Наименование;
			Если ЗначениеЗаполнено(ЗначенияРеквизитов.СерияДокумента)
				Или ЗначениеЗаполнено(ЗначенияРеквизитов.НомерДокумента)
				Или ЗначениеЗаполнено(ЗначенияРеквизитов.КемВыданДокумент)
				Или ЗначениеЗаполнено(ЗначенияРеквизитов.ДатаВыдачиДокумента) Тогда
				СтрокаСубъект.ПаспортныеДанные = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Серия %1, номер %2, выдан %3 %4'"), 
					ЗначенияРеквизитов.СерияДокумента, 
					ЗначенияРеквизитов.НомерДокумента, 
					ЗначенияРеквизитов.КемВыданДокумент, 
					Формат(ЗначенияРеквизитов.ДатаВыдачиДокумента, "ДЛФ=D"));
			КонецЕсли;
		ИначеЕсли ТипЗнч(СтрокаСубъект.Субъект) = Тип("СправочникСсылка._ДемоКонтактныеЛицаПартнеров") Тогда
			ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСубъект.Субъект, "ФизическоеЛицо");
			СтрокаСубъект.ФИО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицо, "Наименование");
			СтрокаСубъект.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрокаСубъект.Субъект, Справочники.ВидыКонтактнойИнформации._ДемоАдресКонтактногоЛица);
		ИначеЕсли ТипЗнч(СтрокаСубъект.Субъект) = Тип("СправочникСсылка._ДемоКонтрагенты") Тогда	
			СтрокаСубъект.ФИО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСубъект.Субъект, "Наименование");
			СтрокаСубъект.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрокаСубъект.Субъект, Справочники.ВидыКонтактнойИнформации._ДемоАдресКонтрагента);
		ИначеЕсли ТипЗнч(СтрокаСубъект.Субъект) = Тип("СправочникСсылка._ДемоПартнеры") Тогда	
			СтрокаСубъект.ФИО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСубъект.Субъект, "Наименование");
			СтрокаСубъект.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрокаСубъект.Субъект, Справочники.ВидыКонтактнойИнформации._ДемоАдресПартнера);
		КонецЕсли;
	КонецЦикла;
	// _Демо конец примера
	
КонецПроцедуры

// Вызывается при заполнении формы "Согласие на обработку персональных данных" данными организации.
//
// Параметры:
//		Организация			- ОпределяемыйТип.Организация - оператор персональных данных.
//		ДанныеОрганизации	- Структура - данные об организации (адрес, ФИО ответственного и т.д.).
//		ДатаАктуальности	- Дата      - дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеОрганизацииОператораПерсональныхДанных(Организация, ДанныеОрганизации, ДатаАктуальности) Экспорт
	
	// _Демо начало примера
	ДанныеОрганизации.Вставить("НаименованиеОрганизации", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "НаименованиеПолное"));
	ДанныеОрганизации.Вставить("АдресОрганизации", 
		УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, Справочники.ВидыКонтактнойИнформации._ДемоЮридическийАдресОрганизации, ДатаАктуальности));
	// _Демо конец примера

КонецПроцедуры

// Вызывается при заполнении формы "Согласие на обработку персональных данных".
// Предназначена для заполнения поля ФИО ответственного за обработку ПДн.
//
// Параметры:
//		ФизическоеЛицо	- ОпределяемыйТип.ФизическоеЛицо - ответственный за обработку персональных данных.
//		ФИО				- Строка - ФИО ответственного, которые нужно заполнить.
//
Процедура ЗаполнитьФИОФизическогоЛица(ФизическоеЛицо, ФИО) Экспорт
	
	// _Демо начало примера
	ФИО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицо, "Наименование");
	// _Демо конец примера
	
КонецПроцедуры

// Позволяет проверить возможность скрытия персональных данных и задать состав исключений для записи в данных.
//
// Параметры:
//   Субъекты - Массив - ссылки на объекты данных, чьи персональные данные будут скрыты.
//   ТаблицаИсключений - ТаблицаЗначений - таблица, в которую добавляются субъекты и причины отказа их скрытия.
//   							Состав полей см. в функции ЗащитаПерсональныхДанных.НоваяТаблицаИсключений.
//   Отказ - Булево - (по умолчанию Истина) признак отказа от скрытия. Если конфигурация адаптирована к обменам, и
//   							определены причины отказа от скрытия, то параметру необходимо установить значение Ложь.
//
Процедура ПередСкрытиемПерсональныхДанныхСубъектов(Субъекты, ТаблицаИсключений, Отказ) Экспорт

	// _Демо начало примера
	_ДемоСтандартныеПодсистемы.ПередСкрытиемПерсональныхДанныхСубъектов(Субъекты, ТаблицаИсключений, Отказ);
	// _Демо конец примера
	
КонецПроцедуры

#КонецОбласти
